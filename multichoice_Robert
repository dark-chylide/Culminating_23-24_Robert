/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author robert
 */
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;
import javax.swing.JOptionPane;

public class culminating2324Robert extends javax.swing.JFrame {

    /**
     * Creates new form culminating2324Robert
     */
    public culminating2324Robert() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 559, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 545, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(culminating2324Robert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(culminating2324Robert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(culminating2324Robert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(culminating2324Robert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        ArrayList<Question> questions = new ArrayList<>();
        questions.add(new Question("What is the capital of France?", "Paris"));
        questions.add(new Question("What is the largest planet in our solar system?", "Jupiter"));
        questions.add(new Question("Who painted the Mona Lisa?", "Leonardo da Vinci"));
        questions.add(new Question("What is the tallest mountain in the world?", "Mount Everest"));
        questions.add(new Question("What is the largest living organism in the world?", "Blue Whale"));
        questions.add(new Question("Who painted the \"Guernica\" masterpiece?", "Pablo Picasso"));
        questions.add(new Question("What is the currency of Japan?", "Yen"));
        questions.add(new Question("In what year did WW2 being?", "1939"));
        questions.add(new Question("What is the capital city of Canada?", "Ottawa"));
        questions.add(new Question("What is the chemical formula for water?", "H2O"));
        questions.add(new Question("How many bones are there in the human bones?", "206"));
        questions.add(new Question("What is the largest desert in the world?", "Antarctica"));
        questions.add(new Question("What is the scientific name of the domestic house cat?", "Felis Catus"));
        questions.add(new Question("What planet in our solar system has the most moons?", "Jupiter"));
        questions.add(new Question("What is the largest ocean in the world?", "Pacific Ocean"));
        questions.add(new Question("What is the name of the largest river in the world?", "Nile River"));
        questions.add(new Question("What is the name of the capital of Australia", "Canberra"));
        questions.add(new Question("Who was the name of the first person to walk on the moon", "Niel Armstrong"));
        questions.add(new Question("What was the name of the first satellite in space?", "Sputnik 1"));
        questions.add(new Question("What country has the nickname the Land down under?", "Pablo Picasso"));
//
        
         Collections.shuffle(questions);

        int score = 0;
        int totalQuestions = questions.size();

        for (int i = 0; i < totalQuestions; i++) {
            Question currentQuestion = questions.get(i);

            // Ask the question with multiple choice options (modify options)
            String answer = JOptionPane.showInputDialog(null, 
                    currentQuestion.getQuestion() + "\nA) " + currentQuestion.getOption1() + 
                    "\nB) " + currentQuestion.getOption2() + 
                    "\nC) " + currentQuestion.getOption3() + 
                    "\nD) " + currentQuestion.getOption4(), "Question " + (i + 1), JOptionPane.QUESTION_MESSAGE);

            // Check user's answer
            if (answer != null && answer.equalsIgnoreCase(currentQuestion.getAnswer())) {
                score++;
                JOptionPane.showMessageDialog(null, "Correct!", "Result", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Incorrect. The answer is: " + currentQuestion.getAnswer(), "Result", JOptionPane.ERROR_MESSAGE);
            }
        }
            // Display final score
               JOptionPane.showMessageDialog(null, "You scored " + score + " out of " + totalQuestions, "Final Score", JOptionPane.INFORMATION_MESSAGE);
      class Question {

    private String question;
    private String Option1;
    private String Option2;
    private String Option3;
    private String Option4;
    private String answer;
            private final String option1;
            private final String option3;
            private final String option2;
            private final String option4;

    public Question(String question, String answer) {
        this.question = question;
        this.answer = answer;
        // Add options (modify as needed)
        this.option1 = "Option 1";
        this.option2 = "Option 2";
        this.option3 = "Option 3";
        this.option4 = "Option 4";
    }
     public String getQuestion() {
        return question;
    }

    public String getOption1() {
        return option1;
    }

    public String getOption2() {
        return option2;
    }

    public String getOption3() {
        return option3;
    }

    public String getOption4() {
        return option4;
    }

    public String getAnswer() {
        return answer;
    }          
      }
    /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new culminating2324Robert().setVisible(true);
            }
        
            },    
    


    
    // Variables declaration - do not modify                     
    // End of variables declaration                   


